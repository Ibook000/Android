name: Build AntiWipe KPM Module

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        kernel_version: 
          - '5.4'
          - '5.10'
          - '5.15'
          - '6.1'
          - '6.6'
        arch:
          - 'arm64'
          - 'arm'
          - 'x86_64'
    
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          bc \
          bison \
          flex \
          libssl-dev \
          libelf-dev \
          wget \
          zip \
          git
    
    - name: Download kernel headers
      run: |
        KERNEL_VERSION="${{ matrix.kernel_version }}"
        ARCH="${{ matrix.arch }}"
        
        # Download appropriate kernel headers
        if [ "$ARCH" = "arm64" ]; then
          CROSS_COMPILE="aarch64-linux-gnu-"
          sudo apt-get install -y gcc-aarch64-linux-gnu
        elif [ "$ARCH" = "arm" ]; then
          CROSS_COMPILE="arm-linux-gnueabihf-"
          sudo apt-get install -y gcc-arm-linux-gnueabihf
        fi
        
        # Download kernel source
        wget https://cdn.kernel.org/pub/linux/kernel/v${KERNEL_VERSION%%.*}.x/linux-${KERNEL_VERSION}.tar.xz
        tar -xf linux-${KERNEL_VERSION}.tar.xz
        
        cd linux-${KERNEL_VERSION}
        
        # Configure for Android
        if [ "$ARCH" = "arm64" ]; then
          make ARCH=arm64 CROSS_COMPILE=$CROSS_COMPILE defconfig
        elif [ "$ARCH" = "arm" ]; then
          make ARCH=arm CROSS_COMPILE=$CROSS_COMPILE defconfig
        else
          make defconfig
        fi
        
        # Prepare headers
        make ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE modules_prepare
    
    - name: Build module
      run: |
        KERNEL_VERSION="${{ matrix.kernel_version }}"
        ARCH="${{ matrix.arch }}"
        
        # Create build directory
        mkdir -p build
        cd build
        
        # Copy source files
        cp ../src/main.c .
        cp ../src/Makefile .
        cp ../src/module.json .
        
        # Update Makefile for cross-compilation
        if [ "$ARCH" != "x86_64" ]; then
          if [ "$ARCH" = "arm64" ]; then
            CROSS_COMPILE="aarch64-linux-gnu-"
          else
            CROSS_COMPILE="arm-linux-gnueabihf-"
          fi
          
          sed -i "1i ARCH := $ARCH" Makefile
          sed -i "1i CROSS_COMPILE := $CROSS_COMPILE" Makefile
        fi
        
        # Build
        make KERNEL_DIR=../linux-${KERNEL_VERSION}
    
    - name: Package module
      run: |
        KERNEL_VERSION="${{ matrix.kernel_version }}"
        ARCH="${{ matrix.arch }}"
        MODULE_VERSION="1.0.0"
        
        # Create package directory
        PKG_NAME="antiwipe_v${MODULE_VERSION}_kernel${KERNEL_VERSION}_${ARCH}"
        mkdir -p "output/$PKG_NAME"
        
        # Copy files
        cp build/antiwipe.ko "output/$PKG_NAME/"
        cp src/module.json "output/$PKG_NAME/"
        cp README.md "output/$PKG_NAME/"
        
        # Create install script
        cat > "output/$PKG_NAME/install.sh" << 'EOF'
        #!/system/bin/sh
        MODULE_PATH="/data/adb/kpm/antiwipe"
        mkdir -p "$MODULE_PATH"
        cp -f antiwipe.ko "$MODULE_PATH/"
        cp -f module.json "$MODULE_PATH/"
        chmod 644 "$MODULE_PATH/"*
        echo "AntiWipe module installed!"
        EOF
        
        chmod +x "output/$PKG_NAME/install.sh"
        
        # Create ZIP
        cd output
        zip -r "${PKG_NAME}.zip" "$PKG_NAME"
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: antiwipe-${{ matrix.kernel_version }}-${{ matrix.arch }}
        path: output/*.zip
        retention-days: 90
    
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        merge-multiple: true
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/**/*.zip
        body: |
          # AntiWipe KPM Module Release
          
          ## Features
          - Protects against malicious wipe scripts
          - Blocks dangerous partition writes
          - User confirmation for dangerous commands
          - Volume key controls
          
          ## Installation
          1. Download the appropriate ZIP for your kernel version and architecture
          2. Install through KernelSU Manager
          3. Reboot your device
          
          ## Supported Kernels
          - 5.4.x
          - 5.10.x
          - 5.15.x
          - 6.1.x
          - 6.6.x
        draft: false
        prerelease: false
